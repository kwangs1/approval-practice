<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.participant">
	<resultMap id="participantResult" type="participantVO">
		<result property="participant_seq" column="participant_seq" />
		<result property="appr_seq" column="appr_seq" />
		<result property="status" column="status" />
		<result property="line_seq" column="line_seq" />
		<result property="signername" column="signername" />
		<result property="signerid" column="signerid" />
		<result property="pos" column="pos" />
		<result property="regdate" column="regdate" />
		<result property="upddate" column="upddate" />
		<result property="approvalstatus" column="approvalstatus" />
		<result property="approvaltype" column="approvaltype" />
		<result property="deptid" column="deptid" />
		<result property="deptname" column="deptname" />
		<result property="flag" column="flag" />
		<result property="statusname" column="statusname" />
	</resultMap>
<!-- 결재선 지정 -->
<insert id="ParticipantWrite" parameterType="participantVO">
	<selectKey keyProperty="participant_seq" resultType="String" order="BEFORE">
		select 'PARTICIPANT' || to_char(sysdate,'YYYYMMDD') || PARTICIPANT_SEQ.nextval from dual
	</selectKey>
    insert into participant
    values(#{participant_seq}, #{appr_seq}, #{status}, #{line_seq}, #{signername},
    #{signerid}, #{pos}, to_char(sysdate,'YYYY/MM/DD HH24:MI:SS'), #{upddate},#{approvalstatus},#{approvaltype},#{deptid},#{deptname},0,#{statusname})
</insert>
 
<!-- 일괄결재 -->
<update id="BulkAppr" parameterType="java.util.Map">
	update participant 
		set approvalstatus = 4097, approvaltype = 2 , upddate = to_char(sysdate,'YYYY/MM/DD HH24:MI:SS')
	where approvaltype = #{approvaltype}
	and approvalstatus = #{approvalstatus}
	and signerid = #{signerid}
	and participant_seq = #{participant_seq}
	and appr_seq = #{appr_seq}	
</update>

<!-- 결재대기 화면에서의 결재선 정보 -->
<select id="ApprWaitFLowInfo" resultType="participantVO" parameterType="String">
select t.*
	from(
		select a.appr_seq, p.participant_seq, p.approvalstatus, p.approvaltype, p.signerid, p.statusname,
		row_number() over(order by a.appr_seq desc)as rnum
			from  approval a, participant p		
		where a.appr_seq = p.appr_seq
		and p.approvaltype = 4
		and p.flag = '0'
	)t
	where rnum between #{rowStart} and #{rowEnd}
</select>

<!-- 결재진행 화면에서의 결재선 정보 -->
<select id="ApprProgrsFLowInfo" resultType="participantVO" parameterType="String">
select t.*
	from(
		select a.appr_seq,p.participant_seq, p.approvalstatus, p.approvaltype, p.signerid, p.status, p.deptid,
		row_number() over(order by a.appr_seq desc)as rnum
			from  approval a, participant p		
		where a.appr_seq = p.appr_seq
		and (p.status ='1000' or p.status ='4224' or p.status ='4112')
		and a.status != 256
		and p.flag ='0'
	)t
	where rnum between #{rowStart} and #{rowEnd}
</select>
<!-- 발송대기 리스트에서 결재선 정보 가져오기 -->
<select id="SndngWaitflowInfo" resultType="participantVO" parameterType="String">
	select a.appr_seq, p.participant_seq, p.signerid, p.deptid, p.approvalstatus, p.approvaltype, p.flag
		from approval a,participant p
	where a.appr_seq = p.appr_seq
	and a.status = 256
	and a.docattr = '1'
	and a.poststatus = '1'
	and p.flag = '0'
	order by a.appr_seq desc
</select>
<!-- 일괄 결재 후 결재선 타입 변경 -->
<update id="updateNextApprovalType" parameterType="java.util.Map">
    update participant
    set approvaltype = #{approvaltype}
    where appr_seq = #{appr_seq}
    and participant_seq = #{participant_seq}
</update>

<!-- 일괄 결재 시 기준이 되는 appr_seq 조회 쿼리 -->
<select id="getApprovalApprseq" resultType="participantVO" parameterType="String">
	select a.appr_seq, p.line_seq, p.approvaltype, p.participant_seq, p.signerid, p.status, p.approvalstatus
		from approval a
	inner join participant p 
		on a.appr_seq = p.appr_seq
	where a.appr_seq = #{appr_seq}
	order by p.line_seq
</select>

<!-- 결재 -->
<update id="FlowAppr" parameterType="java.util.Map">
	update participant
		set approvalstatus = 4097, approvaltype = 2 , upddate = to_char(sysdate,'YYYY/MM/DD HH24:MI:SS')
	where approvaltype = #{approvaltype}
	and approvalstatus = #{approvalstatus}
	and signerid = #{signerid}
	and participant_seq = #{participant_seq}
	and appr_seq = #{appr_seq}	
</update>

<!-- 일반 결재 시 상세보기에서의 결재선 정보  -->
<select id="pInfo" resultType="participantVO" parameterType="java.util.Map">
	select a.*,p.participant_seq, p.approvalstatus, p.approvaltype, p.signerid
		from  approval a, participant p		
	where a.appr_seq = p.appr_seq
	and p.appr_seq = #{appr_seq}
	and p.approvalstatus = 4098
	and p.approvaltype = 4
	and p.flag = '0'
	and p.signerid = #{signerid}
</select>

<!-- 기안자가 최종결재자인 경우 결재선상태 및 결재문서 상태 업데이트 -->
<update id="updateFLowType" parameterType="java.util.Map">
	update participant
		set approvaltype = 2,upddate = to_char(sysdate,'YYYY/MM/DD HH24:MI:SS'), approvalstatus = 4097
	where appr_seq = #{appr_seq}
	and participant_seq = #{participant_seq}
</update>

<!-- 회수 -->
<update id="RetireAppr" parameterType="java.util.Map">
	update participant
		set approvaltype = 1024
	where participant_seq = #{participant_seq}
	and appr_seq = #{appr_seq}
	and signerid = #{signerid}
	and deptid = #{deptid}
	and (status = '1000' or status = '4224' or status = '4112')
</update>

<!-- 재기안 시 해당 문서에 대한 결재자 정보 가져오기 -->
<select id="getRe_pInfo" parameterType="String" resultType="participantVO">
	select a.appr_seq, p.participant_seq, p.signerid, p.approvaltype, p.signername, p.pos
		from approval a
	inner join participant p
	on a.appr_seq = p.appr_seq
	where p.appr_seq = #{appr_seq}
	and p.flag = '0'
	order by p.participant_seq
</select>
<!-- 접수문서에 대한 결재자 정보 가져오기 -->
<select id="getRcept_pInfo" parameterType="String" resultType="participantVO">
	select a.appr_seq, p.participant_seq, p.signerid, p.approvaltype, p.signername, p.pos
		from approval a, participant p , send s
	where s.appr_seq = p.appr_seq
	and a.appr_seq = s.receiptappr_seq
	and a.appr_seq = #{appr_seq}
	and p.flag = '0'
	group by a.appr_seq, p.participant_seq, p.signerid, p.approvaltype, p.signername, p.pos
	order by p.participant_seq
</select>

<!-- 재기안 시 결재자 상태값 변경 -->
<update id="ResubmissionFlowStatusUpd">
	update participant
		set approvaltype = #{approvaltype},upddate = to_char(sysdate,'YYYY/MM/DD HH24:MI:SS'), flag = '1', line_seq = 0
	where appr_seq = #{appr_seq}
	and participant_seq = #{participant_seq}
</update>

<!-- 재기안 시 새로운 결재선에 대한 line_seq 마지막 값 가져오기 -->
<select id="getLastSeq" resultType="participantVO" parameterType="String">
	 select max(line_seq) from participant where appr_seq = #{appr_seq}
</select>

<!-- 재기안 시 새로운 결재선 추가 -->
<insert id="ResubmissionParticipantWrite" parameterType="participantVO">
	<selectKey keyProperty="participant_seq" resultType="String" order="BEFORE">
		select 'PARTICIPANT' || to_char(sysdate,'YYYYMMDD') || PARTICIPANT_SEQ.nextval from dual
	</selectKey>
    insert into participant
    values(#{participant_seq}, #{appr_seq}, #{status}, #{line_seq}, #{signername},
    #{signerid}, #{pos}, to_char(sysdate,'YYYY/MM/DD HH24:MI:SS'), #{upddate},#{approvalstatus},#{approvaltype},#{deptid},#{deptname},0,#{statusname})
</insert>

<!-- 중간 결재자 결재 차례 시 중간결재자에 대한 결재대기 & 결재진행  -->
<select id="ApprFlowLines" resultType="participantVO" parameterType="String">
	select * 
		from participant p
	inner join approval a
	on p.appr_seq = a.appr_seq
	where p.signerid = #{signerid}
</select>

<!-- 문서 삭제 시 결재선 삭제 -->
<delete id="deleteFlowInfo">
	delete participant
	where appr_seq = #{appr_seq}
</delete>
</mapper>